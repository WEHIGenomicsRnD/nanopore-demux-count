{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": ". pipeline parameters",
    "description": "",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "outdir",
                "input_dir"
            ],
            "properties": {
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage",
                    "fa_icon": "fas fa-folder-open"
                },
                "input_dir": {
                    "type": "string",
                    "fa_icon": "fas fa-folder-open",
                    "description": "Input directory containing your fastq file(s). You have to use absolute paths to storage.",
                    "format": "directory-path"
                },
		"excel_file" : {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "description": "Excel file containing index , primers and guide sequence."
                }
            }
        },
        "primer_options": {
            "title": "Primer Options",
            "type": "object",
            "description": "",
            "properties": {
                "primer_mismatches": {
                    "type": "integer",
                    "description": "number of mismatches allowed in fwd or rev primers"
                },
                "barcode_length": {
                    "type": "integer",
                    "description": "Length of barcode sequence."
                },
                "output_untrimmed": {
                    "type": "boolean",
                    "description": "Whether to output untrimmed reads."
                }
            }
        },
        "demultiplex_options": {
            "title": "Demultiplexing Options",
            "type": "object",
            "description": "",
            "properties": {
                "demultiplex" : {
                    "type": "boolean",
                    "description": "Whether to demultiplex the reads."
                },
                "idx_5p_mismatch": {
                    "type": "integer",
                    "description": "Number of mismatches allowed in 5' index."
                },
                "idx_3p_mismatch": {
                    "type": "integer",
                    "description": "Number of mismatches allowed in 3' index."
                },
                "use_db" : {
                    "type": "boolean",
                    "description": "Whether to use the Genomics database for index lookup."
                },
                "splitcode_config_file": {
                    "type": "string",
                    "description": "Optional ready-made config file for splitcode."
                }
            }
        },
        "count": {
            "title": "Count options",
            "type": "object",
            "description": "",
            "properties": {
                "lenient_counts" : {
                    "type": "boolean",
                    "description": "If true, count partially mapped reads."
                },
                "count_only": {
                    "type": "boolean",
                    "description": "If true, only count reads and skip trimming and demultiplexing."
                },
                "consensus": {
                    "type": "boolean",
                    "description": "If true, generate consensus sequences from guide alignments."
                },
		"count_dict": {
                    "type": "boolean",
		    "description": "If true, generate dictionary based counts"
	        },
                "minimap_f": {
                    "type": "number",
                    "description": "Minimap2 -f parameter (default = 0.002). Set this higher for highly repetitive sequences. Accepts integer threshold or fraction."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "conda_env_location": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Use this location for pre-build conda environments (if blank, new conda environments will be created).",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/primer_options"
        },
        {
            "$ref": "#/definitions/demultiplex_options"
        },
        {
            "$ref": "#/definitions/count"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
